events {
	worker_connections  1024;
}

http {

    upstream storage {
        server minio:9000;
    }

    upstream security {
        server security:3000;
    }

    upstream uploader {
        server uploader:3000;
    }

    upstream console {
        ip_hash;
        server minio:9001;
    }

    upstream elasticsearch {
        server elasticsearch:9200;
    }

    server {

        listen 80;
        server_name  localhost;
        location = /register {
            auth_basic off;
            proxy_pass http://security/v1/user;
        }

        location = /token {
            auth_basic off;
            proxy_pass http://security/v1/token;
        }

        location = /auth {
            internal;
            proxy_pass              http://security/v1/token/validation;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
        }

        location = /user {
            auth_request /auth;
            proxy_pass  http://security/v1/user;
        }

        location = /upload {
            auth_request /auth;
            proxy_pass http://uploader/v1/upload;
        }

        location ~* ^/images/(.*) {
            auth_request /auth;
            proxy_pass http://storage/data/$1;
        }

    }

    server {
        listen       9200;
        server_name  elasticsearch;
        location / {
            proxy_pass http://elasticsearch;
        }
    }

    server {
        listen       9000;
        server_name  localhost;
        location / {
            proxy_pass http://storage;
        }
    }

    server {
        listen       9001;
        server_name  localhost;
        location / {
            proxy_pass http://console;
        }
    }
}