apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage-{{ .Release.Name }}
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-local-node-1-{{ .Release.Name }}
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage-{{ .Release.Name }}
  local:
    path: /mnt/local-storage
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - master01
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: local-volume-{{ .Release.Name }}
spec:
  storageClassName: "local-storage-{{ .Release.Name }}"
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db-{{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: db-{{ .Release.Name }}
  serviceName: db-{{ .Release.Name }}
  replicas: {{ .Values.postgres.replicas }}
  template:
    metadata:
      labels:
        app: db-{{ .Release.Name }}
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: local-volume-{{ .Release.Name }}
      containers:
      - name: postgres
        image: {{ .Values.postgres.image }}
        volumeMounts:
        - name: data
          mountPath: /mnt
        env:
          - name: POSTGRES_PASSWORD
            value: {{ .Values.postgres.dbpassword }}
          - name: POSTGRES_USER
            value: {{ .Values.postgres.dbuser }}
          - name: POSTGRES_DB
            value: {{ .Values.postgres.dbname }}